{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x6b821D03B79c6097a2Bdc19aEf1319197B6fc274",
      "txHash": "0xb7e551a73b8c0c618a2e34b1514e46adb0e680bf518a747cb8369b6708b5767b",
      "kind": "transparent"
    },
    {
      "address": "0xF6F113e901DdB28b85e403bEe0420143512d7F2b",
      "txHash": "0x11c3799c3eefbd13cb178bf5863c005b1d678d54d853aa3e60047ec90e8de7a2",
      "kind": "transparent"
    },
    {
      "address": "0xd383A64fc8525bB018B75672A6fE5d25b4bDeA90",
      "txHash": "0x35730a220ca2799b70a8e02f09442538cea3bb9acab329e2e07efec50ec398e8",
      "kind": "transparent"
    },
    {
      "address": "0xc91195100b9109a34fd0a408f9BCeA9a90D3Ad17",
      "txHash": "0x94a64ce5d09ae3a583feb9403ef227a2b108ceb99e149dc465bf7d4720a85990",
      "kind": "transparent"
    },
    {
      "address": "0x75C781BfFbf065eD44a7261EF4B1Aa6F5D2d70CB",
      "txHash": "0xdfae7868dca247e8ad41375e9f9cb80b8aa0cfef6e2ec2b4f5767e57e555d124",
      "kind": "transparent"
    },
    {
      "address": "0xc3dFc419c4886133f07f8DA0039031Cb583cD55D",
      "txHash": "0xcbbb97d61ac9b6788b038277f17ace4b9e97e4b9876ff174e89af75fc59c5419",
      "kind": "transparent"
    },
    {
      "address": "0xeBB07798f0363ED3BA13513622738724086Da170",
      "txHash": "0xf88c4fdf87cd302620dac16bf5d095884ffb1537e2c652e47394301d29496ebb",
      "kind": "transparent"
    },
    {
      "address": "0xeF7181ffa1C73c9bf565619375DACe99aB9fA4Dc",
      "txHash": "0x2070a566ba79fe8ca47d6d141c50110ae843ac1ae367701e91ebba37b5bfa728",
      "kind": "transparent"
    },
    {
      "address": "0xde4b81D21cFb26d6B5c879450c546C88Ec94aB54",
      "txHash": "0x73a050d806ccd3e2b73e451934c7c246f4a7aa7a6244829cceb471330002a878",
      "kind": "transparent"
    },
    {
      "address": "0x5f7C7d893041ebc7c283f04C639F233CC4516670",
      "txHash": "0x3c286322b8f86a6e13d5092cb2498ecb5acdeff45f2eb2c8b404a0150f205274",
      "kind": "transparent"
    },
    {
      "address": "0xafF5C58Ef1AbA6996953b53F3b789DFaA6E3E510",
      "txHash": "0x8938f6ecb4e84b39d294e5cdf8422c5231f7512b8df47a5305f8f4144d8343bf",
      "kind": "transparent"
    },
    {
      "address": "0xf498B1b066801c4205EdfCc81CdF0B9c2cd2552E",
      "txHash": "0x41c773767223926ce3e049c97d1612a95da8e70d0a4360fee0c883d8e176c381",
      "kind": "transparent"
    },
    {
      "address": "0xa9B0fa4A48fC6e1a534620176650e95DdD503CA9",
      "txHash": "0x887353c69afe8e8898a2bac9711eeb782f39b0a86baac9b7434b7fadc8e6e326",
      "kind": "transparent"
    },
    {
      "address": "0x97f6449Ae92b5b2E2dCb43686D504F6e78480E6b",
      "txHash": "0x2c9fcd463b2b0114272607f7bc0393ddc72db05457d3eda0dde5ad841bdeaada",
      "kind": "transparent"
    },
    {
      "address": "0xCc74abB5c666cbF3a8E32945aAB3996a1035D9cF",
      "txHash": "0x6b3f0c2fc7d5806287638106fad9a0b3f1c0eb06da1a84893bac39b645139305",
      "kind": "transparent"
    },
    {
      "address": "0xFbCBf326c44ad761D45DC3663c55ccC169969869",
      "txHash": "0xf0abcdf46c5aa4afd34014373503efecb9a4d841e542184280542c2676d00bb5",
      "kind": "transparent"
    },
    {
      "address": "0xf867d426D326f444354d856f81b0256e51733B0B",
      "txHash": "0xa5f4c5565e51bffc85e05f271ffc20cef4c78df0c2aca3bef328569ec6fe79bd",
      "kind": "transparent"
    },
    {
      "address": "0x9D7002887f724Ba65DF7B855a7F317Ba5c40e92f",
      "txHash": "0xbf81d0650f8588c85cdaecad0fbe1888f3b121f5702c5b3879e1130d21b475ec",
      "kind": "transparent"
    },
    {
      "address": "0xE8828d95ba82883fACE5d017D642697ac4E7f039",
      "txHash": "0x078373f851677e6fa613bae33e56c71bc857eadcb78e725f59078331e1f12719",
      "kind": "transparent"
    },
    {
      "address": "0x79C7ed6cfc33721851ED294a2871D35b662F631b",
      "txHash": "0x0a665bb45d84aeb22a5eff9d79d0d14326dbaf242dd55a604d810d59a2554221",
      "kind": "transparent"
    },
    {
      "address": "0xD64c3c68d86E3E8f477Fc039E5E805EeEbb2337B",
      "txHash": "0xf5ded0b6c37aa218b7ce9e36bd26bb6bb305afbf7b1a3bf6d7c9c94a6752aa0f",
      "kind": "transparent"
    },
    {
      "address": "0x0188292c1F535Ddd18Db232A1e50f79631873311",
      "txHash": "0x11d513b6331e136136da9df88e478d3e9049d3d44aa77f73e3182ce97a546346",
      "kind": "transparent"
    },
    {
      "address": "0xdE4E4b14Ad2e6dEDa53F3784ed310891653e13f8",
      "txHash": "0x7d79eba95bc471745c1621cbb1b1a60ec2cfdfb026a233cef3c676f5f7940456",
      "kind": "transparent"
    },
    {
      "address": "0x1470d8D845f38C936f67746e939fb47c09033ec9",
      "txHash": "0x1059403330c80063c478f8cd738d4a3739290361d559024abce2a7abce202cff",
      "kind": "transparent"
    },
    {
      "address": "0x642C142609A519c2F8FabEc579BB7517cAafB726",
      "txHash": "0x7b31bfda5dcaf05b0fba0d57214c4c60f291c4807211dd37dc8e365e3f8609b5",
      "kind": "transparent"
    },
    {
      "address": "0x5282581c586ce7E2eB0F0EDe41B6828d2B2Fad22",
      "txHash": "0x1bc886005edf1a91c7f5b3b9ccaef7cd68d6b6424d9de5e358b5f8c7711c3555",
      "kind": "transparent"
    },
    {
      "address": "0x82c1aCf13e38510D68251a430B030CB1209Fe64E",
      "txHash": "0x19fce68ba043601019c49fd2d7b5317ba65a14c88859fb3ecf133eef74124d2f",
      "kind": "transparent"
    },
    {
      "address": "0xf85188cE582F6E828cd01F91E9091368b597968A",
      "txHash": "0x3886bcb5f57b97020f71ff6ef7a41bedf0a9491ab95fa481349d221e7c7edffe",
      "kind": "transparent"
    },
    {
      "address": "0xe194F1496b83C69cF4968126c72268dc6F3D1Ead",
      "txHash": "0x198b8696ac30889e7a0917bdee001fe7bda3b790feeb15c36acaa3adddcc1d56",
      "kind": "transparent"
    },
    {
      "address": "0x254B7dfAa137324AeD07E7E4AE815c164b349F0d",
      "txHash": "0xe4279985910b7e49110b4ef3c6eb2bbac42699004828592aece95c22675bd16b",
      "kind": "transparent"
    },
    {
      "address": "0xECAE1935012fC33bE4d65922A8188eE93F2464D3",
      "txHash": "0x8f722a8dad4b7db9e21c093a0ba91c88de9c83dc7c63824726a60d5bfc7e856c",
      "kind": "transparent"
    },
    {
      "address": "0x1C8dF6A09b1a0E60988A54a8411e3DEf194B7501",
      "txHash": "0x679c85d088e99f75ada4d352a8a4b3789c921f526948f103d7c0fe521c61d73d",
      "kind": "transparent"
    }
  ],
  "impls": {
    "fe60359598db62357e446cb4058e8ce06d86149df01b191158d1cc325b06f874": {
      "address": "0x9ac50c71B5e6F3E2976d04Ca9E5b66E36860Ef5D",
      "txHash": "0xdad077bc6fbc822346f25a93f8e21c092a99e717791621b4531f926ea12c8a3e",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "NFTAuctionStructMap",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(NFTAuctionStruct)291_storage)",
            "contract": "NFTAuction",
            "src": "contracts/NFT.sol:18"
          },
          {
            "label": "selectedAuctionId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "NFTAuction",
            "src": "contracts/NFT.sol:20"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "NFTAuction",
            "src": "contracts/NFT.sol:23"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)7_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint256,t_struct(NFTAuctionStruct)291_storage)": {
            "label": "mapping(uint256 => struct NFTAuction.NFTAuctionStruct)",
            "numberOfBytes": "32"
          },
          "t_struct(NFTAuctionStruct)291_storage": {
            "label": "struct NFTAuction.NFTAuctionStruct",
            "members": [
              {
                "label": "seller",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "auctionDurationTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isEnded",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "maxBidder",
                "type": "t_address",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "maxPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "nftContractAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "tokenID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "ee871da1508efa5a69e08ef96f4439aafae5af26c1c69958efb00f93b8bbccc4": {
      "address": "0xe27655fBF2b4048ffE1221770043899D2028cdC3",
      "txHash": "0x34cf63ce9b1164b656b99c29616ddad0a7ab4ff0c28d14f39ba38a976b4de422",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "NFTAuctionStructMap",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(NFTAuctionStruct)291_storage)",
            "contract": "NFTAuctionV3",
            "src": "contracts/NFTV3.sol:18"
          },
          {
            "label": "selectedAuctionId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "NFTAuctionV3",
            "src": "contracts/NFTV3.sol:20"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "NFTAuctionV3",
            "src": "contracts/NFTV3.sol:23"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)7_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint256,t_struct(NFTAuctionStruct)291_storage)": {
            "label": "mapping(uint256 => struct NFTAuctionV3.NFTAuctionStruct)",
            "numberOfBytes": "32"
          },
          "t_struct(NFTAuctionStruct)291_storage": {
            "label": "struct NFTAuctionV3.NFTAuctionStruct",
            "members": [
              {
                "label": "seller",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "auctionDurationTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isEnded",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "maxBidder",
                "type": "t_address",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "maxPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "nftContractAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "tokenID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "c972acb62e5dd1471ecdbfc8922aebb693c86dc7bb14aa405b114395283284cf": {
      "address": "0xf775d89b46dba1fA073ae1113C8d60344648Ce60",
      "txHash": "0x3514ff724955d932077bd5001b1042e1e1bb30805543ff29ebbc1c8d282b3471",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "signatureOwners",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_address)dyn_storage",
            "contract": "MultiSignature",
            "src": "contracts/MultiSignature/MultiSignature.sol:57"
          },
          {
            "label": "threshold",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "MultiSignature",
            "src": "contracts/MultiSignature/MultiSignature.sol:59"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "MultiSignature",
            "src": "contracts/MultiSignature/MultiSignature.sol:62"
          },
          {
            "label": "signatureMap",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_bytes32,t_array(t_struct(signatureInfo)424_storage)dyn_storage)",
            "contract": "MultiSignature",
            "src": "contracts/MultiSignature/MultiSignature.sol:75"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)7_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(signatureInfo)424_storage)dyn_storage": {
            "label": "struct MultiSignature.signatureInfo[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_struct(signatureInfo)424_storage)dyn_storage)": {
            "label": "mapping(bytes32 => struct MultiSignature.signatureInfo[])",
            "numberOfBytes": "32"
          },
          "t_struct(signatureInfo)424_storage": {
            "label": "struct MultiSignature.signatureInfo",
            "members": [
              {
                "label": "applicant",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "signatures",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "916888b8ea61fab3425359713e9c62a03c9c32abc1ed364de391b8477655230b": {
      "address": "0xc1366A7C88b4a0b815C8942B48Ab1E8BCBCeB0BA",
      "txHash": "0x03dca2ef73bcfe6245868f4a65d9504b41564f382a2fab43300d0a8a411ace20",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "signatureOwners",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_address)dyn_storage",
            "contract": "MultiSignatureV2",
            "src": "contracts/MultiSignature/MultiSignatureV2.sol:57"
          },
          {
            "label": "threshold",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "MultiSignatureV2",
            "src": "contracts/MultiSignature/MultiSignatureV2.sol:59"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "MultiSignatureV2",
            "src": "contracts/MultiSignature/MultiSignatureV2.sol:62"
          },
          {
            "label": "signatureMap",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_bytes32,t_array(t_struct(signatureInfo)424_storage)dyn_storage)",
            "contract": "MultiSignatureV2",
            "src": "contracts/MultiSignature/MultiSignatureV2.sol:75"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)7_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(signatureInfo)424_storage)dyn_storage": {
            "label": "struct MultiSignatureV2.signatureInfo[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_struct(signatureInfo)424_storage)dyn_storage)": {
            "label": "mapping(bytes32 => struct MultiSignatureV2.signatureInfo[])",
            "numberOfBytes": "32"
          },
          "t_struct(signatureInfo)424_storage": {
            "label": "struct MultiSignatureV2.signatureInfo",
            "members": [
              {
                "label": "applicant",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "signatures",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "fdf65b239433a89b08d96b1b12901fcdc941f2f18a1dcd870a9a83dfa060ce82": {
      "address": "0x38bbCBcC47320A54b90020c1E71D5859023f610a",
      "txHash": "0xbdb93912f90ed7e63e9adfd461a4e4af70501807a238fa369bd79568ecbd4995",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "AddressPrivileges",
            "src": "contracts/AddressPrivileges/AddressPrivileges.sol:8"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "1",
            "type": "t_struct(AddressSet)5253_storage",
            "contract": "AddressPrivileges",
            "src": "contracts/AddressPrivileges/AddressPrivileges.sol:9"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)5253_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4882_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)4882_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_positions",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {}
      }
    },
    "bc1466027d512d5c3b39ced311031dc8947b3b09d1c6dda175af2cac6c742b2a": {
      "address": "0x128f1Fe9b62B395Ac03a501df1Ad898d027A72a8",
      "txHash": "0x76e1d0edf6fbd594e7ae97c2bd719fdd795914fdead98d09569bc11c1c2a891f",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "AddressPrivilegesV2",
            "src": "contracts/AddressPrivileges/AddressPrivilegesV2.sol:8"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "1",
            "type": "t_struct(AddressSet)4985_storage",
            "contract": "AddressPrivilegesV2",
            "src": "contracts/AddressPrivileges/AddressPrivilegesV2.sol:9"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4985_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4614_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)4614_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_positions",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {}
      }
    },
    "0aaf875f455d1cbb01563a4f2d3e38bc8596b10040cdf1e32e196c92e0e590f5": {
      "address": "0x6744C544Acace982ec7b947821e1DE2bAaee40E3",
      "txHash": "0x05ee21766a23d4bc234e21297b2e46dd0fd777f8f69df32768ac4b8c6b871eaf",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "PledgeChainLink",
            "src": "contracts/PledgeChainLink/PledgeChainLink.sol:10"
          },
          {
            "label": "assetsMap",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_contract(AggregatorV3Interface)45)",
            "contract": "PledgeChainLink",
            "src": "contracts/PledgeChainLink/PledgeChainLink.sol:10"
          },
          {
            "label": "decimalsMap",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PledgeChainLink",
            "src": "contracts/PledgeChainLink/PledgeChainLink.sol:11"
          },
          {
            "label": "priceMap",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PledgeChainLink",
            "src": "contracts/PledgeChainLink/PledgeChainLink.sol:13"
          },
          {
            "label": "decimals",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "PledgeChainLink",
            "src": "contracts/PledgeChainLink/PledgeChainLink.sol:16"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)53_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_contract(AggregatorV3Interface)45)": {
            "label": "mapping(address => contract AggregatorV3Interface)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "918059b8eaef5b15249d9e0a27b6b4334c794233c82e9516465fce8a964873af": {
      "address": "0x937d86847fFD2C295f56B64117bBc29DC71C8Ec3",
      "txHash": "0x88700ac3f47cb5672799837e962727bddcf800944b1dcae092e49eee4bd7dd85",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "DebtTokenV2",
            "src": "contracts/DebtToken/DebtTokenV2.sol:10"
          },
          {
            "label": "assetsMap",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_contract(AggregatorV3Interface)45)",
            "contract": "DebtTokenV2",
            "src": "contracts/DebtToken/DebtTokenV2.sol:10"
          },
          {
            "label": "decimalsMap",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DebtTokenV2",
            "src": "contracts/DebtToken/DebtTokenV2.sol:11"
          },
          {
            "label": "priceMap",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DebtTokenV2",
            "src": "contracts/DebtToken/DebtTokenV2.sol:13"
          },
          {
            "label": "decimals",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "DebtTokenV2",
            "src": "contracts/DebtToken/DebtTokenV2.sol:16"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)53_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_contract(AggregatorV3Interface)45)": {
            "label": "mapping(address => contract AggregatorV3Interface)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "cdbca52d9e10623c726330eb8ca8ebc8d6cb6f700aec2846c669fdfd32873560": {
      "address": "0x1e99d4692a6e930Da110614C02CD0267Fb96B36e",
      "txHash": "0xecb21b9f6bf6cb520b0122cbf76d39ec7502fd5946dc86a5b1396552936fc141",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "PledgeChainLink",
            "src": "contracts/PledgeChainLink/PledgeChainLink.sol:10"
          },
          {
            "label": "assetsMap",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_contract(AggregatorV3Interface)45)",
            "contract": "PledgeChainLink",
            "src": "contracts/PledgeChainLink/PledgeChainLink.sol:10"
          },
          {
            "label": "decimalsMap",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PledgeChainLink",
            "src": "contracts/PledgeChainLink/PledgeChainLink.sol:11"
          },
          {
            "label": "priceMap",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PledgeChainLink",
            "src": "contracts/PledgeChainLink/PledgeChainLink.sol:13"
          },
          {
            "label": "decimals",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "PledgeChainLink",
            "src": "contracts/PledgeChainLink/PledgeChainLink.sol:16"
          },
          {
            "label": "DataFeed",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_string_memory_ptr,t_contract(AggregatorV3Interface)45)",
            "contract": "PledgeChainLink",
            "src": "contracts/PledgeChainLink/PledgeChainLink.sol:200"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)53_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_contract(AggregatorV3Interface)45)": {
            "label": "mapping(address => contract AggregatorV3Interface)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_contract(AggregatorV3Interface)45)": {
            "label": "mapping(string => contract AggregatorV3Interface)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "44ae5db4e04243e219f1af59e2ce40fcd88e125d06d93e9f8912e4019a41f09d": {
      "address": "0xb98a314d7584Cf87ADFe205a1032Af87E73E6d61",
      "txHash": "0x41a0664ede21b1557fc1aed068cf271c3cb089b19d41e6886ac24df3224d459b",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NFTTDAO1V2",
            "src": "contracts/NFTTDAO1/NFTTDAO1V2.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)177_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "191c41a6fc89917bf95ad0b984648be0e5ca07b56ee38b9f61d060bec9810e12": {
      "address": "0x161C7bbfE8B242e97e236b22aECf0d3C850904aD",
      "txHash": "0x2464782348ec1b407b86c4b55d87622e85a1ad92e5d891a48f3b33d86591541c",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NFTTDAO1V2",
            "src": "contracts/NFTTDAO1/NFTTDAO1V2.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)177_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "f0d97dc637d50edb227b3a602ebbbaa46616abf25454034e9f7ad724ca50f2c1": {
      "address": "0x3C781DFEe01a5958604Bf8d58927Dd2a8A8e1f32",
      "txHash": "0x4afca79d2ac0fda04fdbfab377add8ba0bcdb5f61eece4eef25a8dc41e01aea5",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NFTTDAO1",
            "src": "contracts/NFTTDAO1/NFTTDAO1.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)177_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "d69f3304165a9475a911315b477f32676519c7eab7fac798d2c3f44075847128": {
      "address": "0x31cBD1d6C030973b54D087EEE07149c53A2721e3",
      "txHash": "0x3653f4640720f91b11982d0fbb6a6a1665c9cc44c0f84f08e5814f25587e409f",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NFTTDAO1",
            "src": "contracts/NFTTDAO1/NFTTDAO1.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)177_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "151646e5cc020f63d4e91b87aceabac9a67600800c36eaceeb8b376888d4943b": {
      "address": "0x6EAF7E1d645798F074449C4c6798ADe153d61Dfa",
      "txHash": "0x44aa07d61873ffc8ff37f6484cd8189e2c2434648ed9759ab24ecfb324607ae2",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NFTTDAO1V2",
            "src": "contracts/NFTTDAO1/NFTTDAO1V2.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)177_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "d5010ea88fba411afe8c194535a58a1be963efabd362654769e730879edc8d8f": {
      "address": "0x2a00DaB1Aa89093cDEb1F2c6802424c85F5e1327",
      "txHash": "0xc432f690336c77e38059b7a4f9431479c88c856c4f128ef949d9c5882d1418c8",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NFTTDAO1V3",
            "src": "contracts/NFTTDAO1/NFTTDAO1V3.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)177_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "753e4be45233b5f63543e269c9fad692113015b646c1b3a9d4cbe7a6b3fe4ed0": {
      "address": "0x8473B5666DC35f907de4C23e719558d92E65302A",
      "txHash": "0x8c3a13fc81ee4433a6fe46d2b216615ddacc8cfdbdfb2f14c71d12e7e56e69d5",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NFTTDAO1V3",
            "src": "contracts/NFTTDAO1/NFTTDAO1V3.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)177_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "ce3bf41902ab9374c936331b52046e272f1e580b7eac9b80e6285d878327ed14": {
      "address": "0x1361072882E1C4e4D0b8130a87E992B6FffE0db2",
      "txHash": "0xa01917c6d082272fadc3307243319fbc73cbccf0e8753b57d85f3ef06b037eb1",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NFTTDAO1",
            "src": "contracts/NFTTDAO1/NFTTDAO1.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)223_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)119_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)59_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "02db208ef260c41cd295177dade2cc0278a7d501b073a1220358315f9a0ef765": {
      "address": "0x0E4fb0d0D43A1fa9f93f06bc1DE488c318D446E7",
      "txHash": "0x81759cb1de53bff369c517e497df7dc252394cec048b8a244886cd083dcb51f9",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "NFTAuctionStructMap",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(NFTAuctionStruct)11899_storage)",
            "contract": "NFTAuctionV3",
            "src": "contracts/NFT/NFTV3.sol:18"
          },
          {
            "label": "selectedAuctionId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "NFTAuctionV3",
            "src": "contracts/NFT/NFTV3.sol:20"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "NFTAuctionV3",
            "src": "contracts/NFT/NFTV3.sol:23"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)119_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint256,t_struct(NFTAuctionStruct)11899_storage)": {
            "label": "mapping(uint256 => struct NFTAuctionV3.NFTAuctionStruct)",
            "numberOfBytes": "32"
          },
          "t_struct(NFTAuctionStruct)11899_storage": {
            "label": "struct NFTAuctionV3.NFTAuctionStruct",
            "members": [
              {
                "label": "seller",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "auctionDurationTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isEnded",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "maxBidder",
                "type": "t_address",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "maxPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "nftContractAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "tokenID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "b9baa36d200f9456c631e42dc61ceb6df6c7cf485f0e088b5f423e030fb7ef47": {
      "address": "0xFf7C9fD374AB76968d6a416E137dc54e52876190",
      "txHash": "0x7fb631de6f09d8c8098e2f3847b30f4ac4a95c26b50f6c059e8847191bd8616b",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NFTTDAO1V3",
            "src": "contracts/NFTTDAO1/NFTTDAO1V3.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)177_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "37adee1a5f81bbb6014027fb73ab96bd9a77ad32dce9009319a5c51e66f3d4c2": {
      "address": "0xa205C40d08E44183693361371dc13E9789dFd2a2",
      "txHash": "0x5ef8fc910294655e02f0d67ddccb8c00a3d6fb12988eba06bc8fc8bce5a0d0e7",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NFTTDAO1V3",
            "src": "contracts/NFTTDAO1/NFTTDAO1V3.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)177_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "aa3696d8a6e3350bd672b3da5858efe9d20891b1bae9ffdcb72219bd9fcee141": {
      "address": "0xaF9C17D89c05f672D0B30fbb96850CB19778a77a",
      "txHash": "0x78810b490c41ec3187a51b85b3f2d4556efded19c33cd1c9db0ab2a8f6b57161",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NFTTDAO1V3",
            "src": "contracts/NFTTDAO1/NFTTDAO1V3.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)177_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "0968d50b0f133799676497ea37373497da5b8e4158140f74b763da072ce3ba2e": {
      "address": "0x993E1e289A45316784d58b426BD39239158C27e7",
      "txHash": "0x5c1331b2f0b98fc2df74bf71108a08b291f7cc35d81e6ce3224996ad3e90bcf0",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NFTTDAO2",
            "src": "contracts/NFTTDAO2/NFTTDAO2.sol:24"
          },
          {
            "label": "_uriStorage",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(NFTTDAO2ERC721URIStorage)7742",
            "contract": "NFTTDAO2",
            "src": "contracts/NFTTDAO2/NFTTDAO2.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)489_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)177_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(NFTTDAO2ERC721URIStorage)7742": {
            "label": "contract NFTTDAO2ERC721URIStorage",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "6905a74ee0d4ffc2662b2041a977acee51dcf6c932073914c6cdbfb35afe4c93": {
      "address": "0xdB7612d1Eca6dF18aDfBC3F1D912bFBE0bA66617",
      "txHash": "0xb74368d3777cc0a90f80ee38cc36c979d0c72855d25ec89cc134320f072eb113",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NFTTDAO2",
            "src": "contracts/NFTTDAO2/NFTTDAO2.sol:16"
          },
          {
            "label": "_uriStorage",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(NFTTDAO2ERC721URIStorage)7989",
            "contract": "NFTTDAO2",
            "src": "contracts/NFTTDAO2/NFTTDAO2.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)489_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)177_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(NFTTDAO2ERC721URIStorage)7989": {
            "label": "contract NFTTDAO2ERC721URIStorage",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "b70f6ca8508b9699cf82fe2e79b864b4ed89dac8a3ef4f59e3afb567cdadd602": {
      "address": "0xB52d5AE2263994A8390144868345A75F0f434937",
      "txHash": "0x875e3bd4827254273c6a4dee480edb0666d6bdb32f9a5105a824722d9bf2de6c",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NFTTDAO2",
            "src": "contracts/NFTTDAO2/NFTTDAO2.sol:16"
          },
          {
            "label": "_uriStorage",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(NFTTDAO2ERC721URIStorage)7997",
            "contract": "NFTTDAO2",
            "src": "contracts/NFTTDAO2/NFTTDAO2.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)489_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)177_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(NFTTDAO2ERC721URIStorage)7997": {
            "label": "contract NFTTDAO2ERC721URIStorage",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "819f7208df32d1ce848b90d8fba10de30da6e66158235e6dea4bd6f6ea96d3e6": {
      "address": "0xf227BA40302706AbdF7CebBec96bA59B08c99Ab7",
      "txHash": "0xd628f6fe2bc88f2f04c3dc9fcdcd5cf5c917f143783c0e380b4fe110f9e4ae20",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NFTTDAO1",
            "src": "contracts/NFTTDAO1/NFTTDAO1.sol:12"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)177_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "08588bd4e32bdd59bb780a11abdb2eb7db9f55976f7ed5666d49a78641a3f9d6": {
      "address": "0xA77d0bEF98C6A214A631A8aFE0ea910CB1D9032D",
      "txHash": "0x8433df10483b416e6b8a7237ffc09812061d4528f47c5b4d2937307312fff24f",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NFTTDAO2",
            "src": "contracts/NFTTDAO2/NFTTDAO2.sol:16"
          },
          {
            "label": "_uriStorage",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(NFTTDAO2ERC721URIStorage)8083",
            "contract": "NFTTDAO2",
            "src": "contracts/NFTTDAO2/NFTTDAO2.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)489_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)177_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(NFTTDAO2ERC721URIStorage)8083": {
            "label": "contract NFTTDAO2ERC721URIStorage",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "521a5dd99da4713a28e34dd06b914f0b8e4933aa80a501d5b3a3f64cf39dda3d": {
      "address": "0x89698538Ddc784c95E31d77A8eab39fc9eeDa07A",
      "txHash": "0xea5c8cb4de5c7ea0d04b226d98b82a911c9d0f63f3ea9f0219dc348955c1151c",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:16"
          },
          {
            "label": "_uriStorage",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(NFTTDAO2ERC721URIStorage)7738",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)489_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)177_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(NFTTDAO2ERC721URIStorage)7738": {
            "label": "contract NFTTDAO2ERC721URIStorage",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "ec962b14db8ea138e38e9e8520871250669ea8ef97ac7581453500af815bad70": {
      "address": "0x1F7A64Fbc4cb577E2bE76dF1CCE5Bf97dB07E2EB",
      "txHash": "0x91b5e85a2d4943a1ede730b27d618e1bba2b55e0ba0997acecb6bb850136c918",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:18"
          },
          {
            "label": "_uriStorage",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(NFTTDAO2ERC721URIStorage)7716",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)489_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)177_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(NFTTDAO2ERC721URIStorage)7716": {
            "label": "contract NFTTDAO2ERC721URIStorage",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "918e757c63430b15e1752526e7c7aff5402c5ce78130263f031040cfc56fa5c1": {
      "address": "0xF8A49C4431546782dCF5e3cbE4148689739385f3",
      "txHash": "0xd01980a55eb024c163d12e43cf6ac04dbd38bf0918e9fafda4a418cd01cfa7f1",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:35"
          },
          {
            "label": "_uriStorage",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(NFTTDAO2ERC721URIStorage)7716",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:36"
          },
          {
            "label": "_NFTOrderInfoId",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:37"
          },
          {
            "label": "NFTOrderInfoMap",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(NFTOrderInfo)7749_storage)",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:38"
          },
          {
            "label": "orderInfoIds",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)489_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)177_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(NFTTDAO2ERC721URIStorage)7716": {
            "label": "contract NFTTDAO2ERC721URIStorage",
            "numberOfBytes": "20"
          },
          "t_enum(OrderStatus)7737": {
            "label": "enum NFTTDAO2V2.OrderStatus",
            "members": [
              "Pending",
              "Active",
              "Sold",
              "Cancelled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_struct(NFTOrderInfo)7749_storage)": {
            "label": "mapping(uint256 => struct NFTTDAO2V2.NFTOrderInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(NFTOrderInfo)7749_storage": {
            "label": "struct NFTTDAO2V2.NFTOrderInfo",
            "members": [
              {
                "label": "orderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sellerWalletAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "selleNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)7737",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "2fef5dd06c1de7ba747e4110568b6d0ca74f3b76db86180b52fbcb1790c5873b": {
      "address": "0xa3bAEc7E50D1BBeF99Dc66B1A651D06a59A2cCa7",
      "txHash": "0x1b673bbc865fef4c8e46e524c00cfaaf04da653fd51bd3925d19272a355f123e",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:35"
          },
          {
            "label": "_uriStorage",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(NFTTDAO2ERC721URIStorage)7716",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:36"
          },
          {
            "label": "_NFTOrderInfoId",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:37"
          },
          {
            "label": "NFTOrderInfoMap",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(NFTOrderInfo)7749_storage)",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:38"
          },
          {
            "label": "orderInfoIds",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)489_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)177_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(NFTTDAO2ERC721URIStorage)7716": {
            "label": "contract NFTTDAO2ERC721URIStorage",
            "numberOfBytes": "20"
          },
          "t_enum(OrderStatus)7737": {
            "label": "enum NFTTDAO2V2.OrderStatus",
            "members": [
              "Pending",
              "Active",
              "Sold",
              "Cancelled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_struct(NFTOrderInfo)7749_storage)": {
            "label": "mapping(uint256 => struct NFTTDAO2V2.NFTOrderInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(NFTOrderInfo)7749_storage": {
            "label": "struct NFTTDAO2V2.NFTOrderInfo",
            "members": [
              {
                "label": "orderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sellerWalletAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "selleNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)7737",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "fa492fc20c62c0835df93e5cf48f6b35a7223a3be8fb594f5876429d25b7a044": {
      "address": "0x1AF3196f6a3D44AdC460C4D31a60A8F263ad7129",
      "txHash": "0x75b0e4cf4ac49ee6c2ee28003b5307b114ec1aee57698776d04c369106ae9d71",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:35"
          },
          {
            "label": "_uriStorage",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(NFTTDAO2ERC721URIStorage)7716",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:36"
          },
          {
            "label": "_NFTOrderInfoId",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:37"
          },
          {
            "label": "NFTOrderInfoMap",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(NFTOrderInfo)7749_storage)",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:38"
          },
          {
            "label": "orderInfoIds",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)489_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)177_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(NFTTDAO2ERC721URIStorage)7716": {
            "label": "contract NFTTDAO2ERC721URIStorage",
            "numberOfBytes": "20"
          },
          "t_enum(OrderStatus)7737": {
            "label": "enum NFTTDAO2V2.OrderStatus",
            "members": [
              "Pending",
              "Active",
              "Sold",
              "Cancelled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_struct(NFTOrderInfo)7749_storage)": {
            "label": "mapping(uint256 => struct NFTTDAO2V2.NFTOrderInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(NFTOrderInfo)7749_storage": {
            "label": "struct NFTTDAO2V2.NFTOrderInfo",
            "members": [
              {
                "label": "orderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sellerWalletAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "selleNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)7737",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "02399ade8aef12b5b741c1d8c632d724e812190ea1139f646832e7452a5d2c1d": {
      "address": "0x02a11d473853342c74Ebf7152608Ff6b90eee8E1",
      "txHash": "0x2e3e79099d3198a762e2f147f975c3788c01ab56a439f91b35f7bacd18180ba7",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:35"
          },
          {
            "label": "_uriStorage",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(NFTTDAO2ERC721URIStorage)7716",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:36"
          },
          {
            "label": "_NFTOrderInfoId",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:37"
          },
          {
            "label": "NFTOrderInfoMap",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(NFTOrderInfo)7749_storage)",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:38"
          },
          {
            "label": "orderInfoIds",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)489_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)177_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(NFTTDAO2ERC721URIStorage)7716": {
            "label": "contract NFTTDAO2ERC721URIStorage",
            "numberOfBytes": "20"
          },
          "t_enum(OrderStatus)7737": {
            "label": "enum NFTTDAO2V2.OrderStatus",
            "members": [
              "Pending",
              "Active",
              "Sold",
              "Cancelled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_struct(NFTOrderInfo)7749_storage)": {
            "label": "mapping(uint256 => struct NFTTDAO2V2.NFTOrderInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(NFTOrderInfo)7749_storage": {
            "label": "struct NFTTDAO2V2.NFTOrderInfo",
            "members": [
              {
                "label": "orderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sellerWalletAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "selleNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)7737",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "171ef130f20a377303cee731b2886b87f7d344af7a73319e69e457ee3e2c1edd": {
      "address": "0x6ef6181842F541aCA44393f9Bf499078fDfC4B62",
      "txHash": "0xb2dd4872c5b8dca5f63d72b194839a6f94a949d1a00f2a7e523f69bf595ab807",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:35"
          },
          {
            "label": "_uriStorage",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(NFTTDAO2ERC721URIStorage)7716",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:36"
          },
          {
            "label": "_NFTOrderInfoId",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:37"
          },
          {
            "label": "NFTOrderInfoMap",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(NFTOrderInfo)7749_storage)",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:38"
          },
          {
            "label": "orderInfoIds",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)489_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)177_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(NFTTDAO2ERC721URIStorage)7716": {
            "label": "contract NFTTDAO2ERC721URIStorage",
            "numberOfBytes": "20"
          },
          "t_enum(OrderStatus)7737": {
            "label": "enum NFTTDAO2V2.OrderStatus",
            "members": [
              "Pending",
              "Active",
              "Sold",
              "Cancelled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_struct(NFTOrderInfo)7749_storage)": {
            "label": "mapping(uint256 => struct NFTTDAO2V2.NFTOrderInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(NFTOrderInfo)7749_storage": {
            "label": "struct NFTTDAO2V2.NFTOrderInfo",
            "members": [
              {
                "label": "orderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sellerWalletAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "selleNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)7737",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "547a4c21e7ad88869e98e325ba0786acc380e57202661d2da46c6bb2d51a20ea": {
      "address": "0x0eC32fA93d002836FCD54fc4d7E9448C938E13Ca",
      "txHash": "0x69ee33d44f11d7073d22ee84d316bd248a6222bf679e67aa5a6c8f62e4a3aa09",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:35"
          },
          {
            "label": "_uriStorage",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(NFTTDAO2ERC721URIStorage)7716",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:36"
          },
          {
            "label": "_NFTOrderInfoId",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:37"
          },
          {
            "label": "NFTOrderInfoMap",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(NFTOrderInfo)7749_storage)",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:38"
          },
          {
            "label": "orderInfoIds",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)489_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)177_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(NFTTDAO2ERC721URIStorage)7716": {
            "label": "contract NFTTDAO2ERC721URIStorage",
            "numberOfBytes": "20"
          },
          "t_enum(OrderStatus)7737": {
            "label": "enum NFTTDAO2V2.OrderStatus",
            "members": [
              "Pending",
              "Active",
              "Sold",
              "Cancelled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_struct(NFTOrderInfo)7749_storage)": {
            "label": "mapping(uint256 => struct NFTTDAO2V2.NFTOrderInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(NFTOrderInfo)7749_storage": {
            "label": "struct NFTTDAO2V2.NFTOrderInfo",
            "members": [
              {
                "label": "orderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sellerWalletAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "selleNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)7737",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "758cc84107e0ceab81a23a4022f2da7837ebcfb703903b0ef06fac652f9fc60d": {
      "address": "0x8bE0B16AbAfD8b6b3ed620924E406d6Dd0A5bcCC",
      "txHash": "0x4477ea951e8720fac0fba65d2c94209109b362094c3eb944964e0cf66164bba9",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:35"
          },
          {
            "label": "_uriStorage",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(NFTTDAO2ERC721URIStorage)7716",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:36"
          },
          {
            "label": "_NFTOrderInfoId",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:37"
          },
          {
            "label": "NFTOrderInfoMap",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(NFTOrderInfo)7749_storage)",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:38"
          },
          {
            "label": "orderInfoIds",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "NFTTDAO2V2",
            "src": "contracts/NFTTDAO2/NFTTDAO2V2.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)489_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)177_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(NFTTDAO2ERC721URIStorage)7716": {
            "label": "contract NFTTDAO2ERC721URIStorage",
            "numberOfBytes": "20"
          },
          "t_enum(OrderStatus)7737": {
            "label": "enum NFTTDAO2V2.OrderStatus",
            "members": [
              "Pending",
              "Active",
              "Sold",
              "Cancelled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_struct(NFTOrderInfo)7749_storage)": {
            "label": "mapping(uint256 => struct NFTTDAO2V2.NFTOrderInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(NFTOrderInfo)7749_storage": {
            "label": "struct NFTTDAO2V2.NFTOrderInfo",
            "members": [
              {
                "label": "orderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sellerWalletAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "selleNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)7737",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "292d1a18a63190c26d5453fe736b67de3ed2d1a7ab6ca212d0251044a6b2f4a6": {
      "address": "0xf02Ee0719FBd348EfBd3B489ffcd62C5b63544B8",
      "txHash": "0x1a5563d6ce8012f4b849d5f470a94afeda1f72d82f745f5ca81b0120e1d032e3",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "token0",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)1469",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:18"
          },
          {
            "label": "token1",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)1469",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:19"
          },
          {
            "label": "tokenAddress0",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:20"
          },
          {
            "label": "tokenAddress1",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:21"
          },
          {
            "label": "reserve0",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:23"
          },
          {
            "label": "reserve1",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:24"
          },
          {
            "label": "reserveFee0",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:26"
          },
          {
            "label": "reserveFee1",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:27"
          },
          {
            "label": "FEE_DENOMINATOR",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:28"
          },
          {
            "label": "fee",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:29"
          },
          {
            "label": "addLiquidity0Min",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:30"
          },
          {
            "label": "addLiquidity0Max",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:32"
          },
          {
            "label": "addLiquidity1Min",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:33"
          },
          {
            "label": "addLiquidity1Max",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:35"
          },
          {
            "label": "liquidityMin",
            "offset": 0,
            "slot": "14",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:38"
          },
          {
            "label": "liquidityMax",
            "offset": 0,
            "slot": "15",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:41"
          },
          {
            "label": "swapMin",
            "offset": 0,
            "slot": "16",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:45"
          },
          {
            "label": "swapMax",
            "offset": 0,
            "slot": "17",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)159_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)356_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC20)1469": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "1ca277352faf8e3b4b49f6854e641ae511e34f347167eaf77081f07cda025f89": {
      "address": "0x3CC702CfeF35cFB122aE3a53893a9d94a4a563a5",
      "txHash": "0x2beeb1c6720079e35a42773ac84a90140905ab049752bed6bee9700f83fd67cc",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "token0",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)1469",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:18"
          },
          {
            "label": "token1",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)1469",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:19"
          },
          {
            "label": "tokenAddress0",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:20"
          },
          {
            "label": "tokenAddress1",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:21"
          },
          {
            "label": "reserve0",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:23"
          },
          {
            "label": "reserve1",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:24"
          },
          {
            "label": "reserveFee0",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:26"
          },
          {
            "label": "reserveFee1",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:27"
          },
          {
            "label": "FEE_DENOMINATOR",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:28"
          },
          {
            "label": "fee",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:29"
          },
          {
            "label": "addLiquidity0Min",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:30"
          },
          {
            "label": "addLiquidity0Max",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:32"
          },
          {
            "label": "addLiquidity1Min",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:33"
          },
          {
            "label": "addLiquidity1Max",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:35"
          },
          {
            "label": "liquidityMin",
            "offset": 0,
            "slot": "14",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:38"
          },
          {
            "label": "liquidityMax",
            "offset": 0,
            "slot": "15",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:41"
          },
          {
            "label": "swapMin",
            "offset": 0,
            "slot": "16",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:45"
          },
          {
            "label": "swapMax",
            "offset": 0,
            "slot": "17",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)159_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)356_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC20)1469": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "6f97db4bca4635b00ce6ce49c3e66cb50457c61eb3b0b0bdba527cf59d61fbdd": {
      "address": "0x72c42852dc816399D22C1092E9DA851014414987",
      "txHash": "0x73de5926bbf7114c87c5cb3e032efc81aa87e0167699e98003e919054c2329d6",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "tokensArr",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:18"
          },
          {
            "label": "token0",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)1469",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:19"
          },
          {
            "label": "token1",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IERC20)1469",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:21"
          },
          {
            "label": "tokenAddress0",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:22"
          },
          {
            "label": "tokenAddress1",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:23"
          },
          {
            "label": "reserve0",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:24"
          },
          {
            "label": "reserve1",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:26"
          },
          {
            "label": "reserveFee0",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:28"
          },
          {
            "label": "reserveFee1",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:29"
          },
          {
            "label": "FEE_DENOMINATOR",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:30"
          },
          {
            "label": "fee",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:31"
          },
          {
            "label": "addLiquidity0Min",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:32"
          },
          {
            "label": "addLiquidity0Max",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:33"
          },
          {
            "label": "addLiquidity1Min",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:35"
          },
          {
            "label": "addLiquidity1Max",
            "offset": 0,
            "slot": "14",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:38"
          },
          {
            "label": "liquidityMin",
            "offset": 0,
            "slot": "15",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:40"
          },
          {
            "label": "liquidityMax",
            "offset": 0,
            "slot": "16",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:43"
          },
          {
            "label": "swapMin",
            "offset": 0,
            "slot": "17",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:46"
          },
          {
            "label": "swapMax",
            "offset": 0,
            "slot": "18",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)159_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)356_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)1469": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "15c1e2f5b59b9adde78c38c69f8f5cb7710ab862e886edc627e4f6cd05e43429": {
      "address": "0x4a2B107dBD01135bd55553bb279192e997ad8394",
      "txHash": "0x6352ff988a4c1aa5435b28a49f70b107334956b687b7d2fbca6e5ae2f4968b67",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "tokensArr",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:18"
          },
          {
            "label": "token0",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)1469",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:19"
          },
          {
            "label": "token1",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IERC20)1469",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:21"
          },
          {
            "label": "tokenAddress0",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:22"
          },
          {
            "label": "tokenAddress1",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:23"
          },
          {
            "label": "reserve0",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:24"
          },
          {
            "label": "reserve1",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:26"
          },
          {
            "label": "reserveFee0",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:28"
          },
          {
            "label": "reserveFee1",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:29"
          },
          {
            "label": "FEE_DENOMINATOR",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:30"
          },
          {
            "label": "fee",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:31"
          },
          {
            "label": "addLiquidity0Min",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:32"
          },
          {
            "label": "addLiquidity0Max",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:33"
          },
          {
            "label": "addLiquidity1Min",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:35"
          },
          {
            "label": "addLiquidity1Max",
            "offset": 0,
            "slot": "14",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:38"
          },
          {
            "label": "liquidityMin",
            "offset": 0,
            "slot": "15",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:40"
          },
          {
            "label": "liquidityMax",
            "offset": 0,
            "slot": "16",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:43"
          },
          {
            "label": "swapMin",
            "offset": 0,
            "slot": "17",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:46"
          },
          {
            "label": "swapMax",
            "offset": 0,
            "slot": "18",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)159_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)356_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)1469": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "f072ba10cfd815e205505eb2260ee114c88748e5f7401675523780caee429294": {
      "address": "0x99d88Cc8bc398879Cec9D6531dfa5dD412298B3c",
      "txHash": "0xcd5b71a78a2d85cf73c7e04139ae03c1509f3034e74e3d34ad200a26729afdf7",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "tokensArr",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:18"
          },
          {
            "label": "token0",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)3962",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:19"
          },
          {
            "label": "token1",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IERC20)3962",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:21"
          },
          {
            "label": "tokenAddress0",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:22"
          },
          {
            "label": "tokenAddress1",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:23"
          },
          {
            "label": "reserve0",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:24"
          },
          {
            "label": "reserve1",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:26"
          },
          {
            "label": "reserveFee0",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:28"
          },
          {
            "label": "reserveFee1",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:29"
          },
          {
            "label": "FEE_DENOMINATOR",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:30"
          },
          {
            "label": "fee",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:31"
          },
          {
            "label": "addLiquidity0Min",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:32"
          },
          {
            "label": "addLiquidity0Max",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:33"
          },
          {
            "label": "addLiquidity1Min",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:35"
          },
          {
            "label": "addLiquidity1Max",
            "offset": 0,
            "slot": "14",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:38"
          },
          {
            "label": "liquidityMin",
            "offset": 0,
            "slot": "15",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:41"
          },
          {
            "label": "liquidityMax",
            "offset": 0,
            "slot": "16",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:44"
          },
          {
            "label": "swapMin",
            "offset": 0,
            "slot": "17",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:47"
          },
          {
            "label": "swapMax",
            "offset": 0,
            "slot": "18",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)205_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)119_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)59_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)950_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)3962": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "cb62d1fbfc0e70b17c3db69c959f1c827e22cc6c401f9ac73086bf30ddec1592": {
      "address": "0x611F4A1Fcc44403209f3866dcC1DfC183c6321B3",
      "txHash": "0xe0cf3bc41dd57ac2f1d94f33d774eae1c6ed182dedf450aaf2519eb197f172d4",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "tokensArr",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:20"
          },
          {
            "label": "token0",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)3962",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:21"
          },
          {
            "label": "token1",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IERC20)3962",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:23"
          },
          {
            "label": "tokenMetadata0",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IERC20Metadata)3988",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:24"
          },
          {
            "label": "tokenMetadata1",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IERC20Metadata)3988",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:25"
          },
          {
            "label": "tokenAddress0",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:26"
          },
          {
            "label": "tokenAddress1",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:28"
          },
          {
            "label": "reserve0",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:29"
          },
          {
            "label": "reserve1",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:31"
          },
          {
            "label": "reserveFee0",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:33"
          },
          {
            "label": "reserveFee1",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:34"
          },
          {
            "label": "FEE_DENOMINATOR",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:34"
          },
          {
            "label": "fee",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:36"
          },
          {
            "label": "addLiquidity0Min",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:36"
          },
          {
            "label": "addLiquidity0Max",
            "offset": 0,
            "slot": "14",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:38"
          },
          {
            "label": "addLiquidity1Min",
            "offset": 0,
            "slot": "15",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:40"
          },
          {
            "label": "addLiquidity1Max",
            "offset": 0,
            "slot": "16",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:43"
          },
          {
            "label": "liquidityMin",
            "offset": 0,
            "slot": "17",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:46"
          },
          {
            "label": "liquidityMax",
            "offset": 0,
            "slot": "18",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:51"
          },
          {
            "label": "swapMin",
            "offset": 0,
            "slot": "19",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:54"
          },
          {
            "label": "swapMax",
            "offset": 0,
            "slot": "20",
            "type": "t_uint256",
            "contract": "LiquidityPool",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPool.sol:57"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)205_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)119_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)59_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)950_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)3962": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Metadata)3988": {
            "label": "contract IERC20Metadata",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "f0032be60310ecca8afbf9c748949b172d0e1e214afe4846a3de2e489f2a1e6f": {
      "address": "0x281E907f8b1d94dc7f39dD7C66e5E48eCD9Db1Ff",
      "txHash": "0xe4298ffcd51c5a5d9e8f8f469ea95937d185dead0f20c77b1442442fc6dfbd46",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "tokensArr",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:20"
          },
          {
            "label": "token0",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)3962",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:21"
          },
          {
            "label": "token1",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IERC20)3962",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:23"
          },
          {
            "label": "tokenMetadata0",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IERC20Metadata)3988",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:24"
          },
          {
            "label": "tokenMetadata1",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IERC20Metadata)3988",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:25"
          },
          {
            "label": "tokenAddress0",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:26"
          },
          {
            "label": "tokenAddress1",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:28"
          },
          {
            "label": "reserve0",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:29"
          },
          {
            "label": "reserve1",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:31"
          },
          {
            "label": "reserveFee0",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:33"
          },
          {
            "label": "reserveFee1",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:34"
          },
          {
            "label": "FEE_DENOMINATOR",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:34"
          },
          {
            "label": "fee",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:36"
          },
          {
            "label": "addLiquidity0Min",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:36"
          },
          {
            "label": "addLiquidity0Max",
            "offset": 0,
            "slot": "14",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:38"
          },
          {
            "label": "addLiquidity1Min",
            "offset": 0,
            "slot": "15",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:40"
          },
          {
            "label": "addLiquidity1Max",
            "offset": 0,
            "slot": "16",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:43"
          },
          {
            "label": "liquidityMin",
            "offset": 0,
            "slot": "17",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:46"
          },
          {
            "label": "liquidityMax",
            "offset": 0,
            "slot": "18",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:51"
          },
          {
            "label": "swapMin",
            "offset": 0,
            "slot": "19",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:54"
          },
          {
            "label": "swapMax",
            "offset": 0,
            "slot": "20",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:57"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)205_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)119_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)59_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)950_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)3962": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Metadata)3988": {
            "label": "contract IERC20Metadata",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "beeabac45a14da1a1ec9f8fa3175d407dbed2397949f9b4802a7e4de1665f1fa": {
      "address": "0xb83e2A1D7D00e8bA42AA4610c6406f78eD02a36f",
      "txHash": "0xb008411784e9c971477980e2579dfc9200dec08081613309d45f69ba2c3dd884",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "tokensArr",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:20"
          },
          {
            "label": "token0",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)1469",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:21"
          },
          {
            "label": "token1",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IERC20)1469",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:23"
          },
          {
            "label": "tokenMetadata0",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IERC20Metadata)1495",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:24"
          },
          {
            "label": "tokenMetadata1",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IERC20Metadata)1495",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:25"
          },
          {
            "label": "tokenAddress0",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:26"
          },
          {
            "label": "tokenAddress1",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:28"
          },
          {
            "label": "reserve0",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:29"
          },
          {
            "label": "reserve1",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:31"
          },
          {
            "label": "reserveFee0",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:33"
          },
          {
            "label": "reserveFee1",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:34"
          },
          {
            "label": "FEE_DENOMINATOR",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:34"
          },
          {
            "label": "fee",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:36"
          },
          {
            "label": "addLiquidity0Min",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:36"
          },
          {
            "label": "addLiquidity0Max",
            "offset": 0,
            "slot": "14",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:38"
          },
          {
            "label": "addLiquidity1Min",
            "offset": 0,
            "slot": "15",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:40"
          },
          {
            "label": "addLiquidity1Max",
            "offset": 0,
            "slot": "16",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:43"
          },
          {
            "label": "liquidityMin",
            "offset": 0,
            "slot": "17",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:46"
          },
          {
            "label": "liquidityMax",
            "offset": 0,
            "slot": "18",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:51"
          },
          {
            "label": "swapMin",
            "offset": 0,
            "slot": "19",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:54"
          },
          {
            "label": "swapMax",
            "offset": 0,
            "slot": "20",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:57"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)159_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)356_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)1469": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Metadata)1495": {
            "label": "contract IERC20Metadata",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "b2ab4432ae0a54a49a09534a5656ace2b1f4eed0b25e7290ac510b732a27ebba": {
      "address": "0x2f9dff8644AA57519E45738f13b487EBDc330f0C",
      "txHash": "0x66cd2ba10afe3e3c2976063274011ba701269e7d704293cfd5954b254cd1fc7e",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "tokensArr",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:20"
          },
          {
            "label": "token0",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)1469",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:21"
          },
          {
            "label": "token1",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IERC20)1469",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:23"
          },
          {
            "label": "tokenMetadata0",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IERC20Metadata)1495",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:24"
          },
          {
            "label": "tokenMetadata1",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IERC20Metadata)1495",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:25"
          },
          {
            "label": "tokenAddress0",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:26"
          },
          {
            "label": "tokenAddress1",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:28"
          },
          {
            "label": "reserve0",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:29"
          },
          {
            "label": "reserve1",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:31"
          },
          {
            "label": "reserveFee0",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:33"
          },
          {
            "label": "reserveFee1",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:34"
          },
          {
            "label": "FEE_DENOMINATOR",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:34"
          },
          {
            "label": "fee",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:36"
          },
          {
            "label": "addLiquidity0Min",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:36"
          },
          {
            "label": "addLiquidity0Max",
            "offset": 0,
            "slot": "14",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:38"
          },
          {
            "label": "addLiquidity1Min",
            "offset": 0,
            "slot": "15",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:40"
          },
          {
            "label": "addLiquidity1Max",
            "offset": 0,
            "slot": "16",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:43"
          },
          {
            "label": "liquidityMin",
            "offset": 0,
            "slot": "17",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:46"
          },
          {
            "label": "liquidityMax",
            "offset": 0,
            "slot": "18",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:51"
          },
          {
            "label": "swapMin",
            "offset": 0,
            "slot": "19",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:54"
          },
          {
            "label": "swapMax",
            "offset": 0,
            "slot": "20",
            "type": "t_uint256",
            "contract": "LiquidityPoolV2",
            "src": "contracts/Liquidity/LiquidityPool/LiquidityPoolV2.sol:57"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)159_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)356_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)1469": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Metadata)1495": {
            "label": "contract IERC20Metadata",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "b0fe568edb06b296714f27ef0197ecfd80c8b25b6ffa99c2cc1970304b2351bb": {
      "address": "0x5F17F0c6AC24f5304cC6bbe606d9E415b4A41BaB",
      "txHash": "0x6277e1439206c889ee74c7caf3ca0ec0d7eb6d868bc76f76296563461c5f8b51",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NFTTDAO3",
            "src": "contracts/NFTTDAO3/NFTTDAO3.sol:35"
          },
          {
            "label": "_uriStorage",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(NFTTDAO3ERC721URIStorage)8097",
            "contract": "NFTTDAO3",
            "src": "contracts/NFTTDAO3/NFTTDAO3.sol:36"
          },
          {
            "label": "_NFTOrderInfoId",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "NFTTDAO3",
            "src": "contracts/NFTTDAO3/NFTTDAO3.sol:37"
          },
          {
            "label": "NFTOrderInfoMap",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(NFTOrderInfo)7752_storage)",
            "contract": "NFTTDAO3",
            "src": "contracts/NFTTDAO3/NFTTDAO3.sol:38"
          },
          {
            "label": "orderInfoIds",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "NFTTDAO3",
            "src": "contracts/NFTTDAO3/NFTTDAO3.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)489_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)177_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(NFTTDAO3ERC721URIStorage)8097": {
            "label": "contract NFTTDAO3ERC721URIStorage",
            "numberOfBytes": "20"
          },
          "t_enum(OrderStatus)7740": {
            "label": "enum NFTTDAO3.OrderStatus",
            "members": [
              "Pending",
              "Active",
              "Sold",
              "Cancelled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_struct(NFTOrderInfo)7752_storage)": {
            "label": "mapping(uint256 => struct NFTTDAO3.NFTOrderInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(NFTOrderInfo)7752_storage": {
            "label": "struct NFTTDAO3.NFTOrderInfo",
            "members": [
              {
                "label": "orderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sellerWalletAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "selleNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)7740",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "d2aa409ff575f121cdefe73cc46e745d4520b846d4ce6c06b16f6ae3c489907b": {
      "address": "0xDe08fa03E01D8BD584ED9F8f2BDD4225f811606a",
      "txHash": "0x5c2b0b7ac410b403aeb4f8643f4b299329c3c72b6ab8b122f91baa428c58bbab",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NFTTDAO3V2",
            "src": "contracts/NFTTDAO3/NFTTDAO3V2.sol:35"
          },
          {
            "label": "_uriStorage",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(NFTTDAO3ERC721URIStorage)7738",
            "contract": "NFTTDAO3V2",
            "src": "contracts/NFTTDAO3/NFTTDAO3V2.sol:36"
          },
          {
            "label": "_NFTOrderInfoId",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "NFTTDAO3V2",
            "src": "contracts/NFTTDAO3/NFTTDAO3V2.sol:37"
          },
          {
            "label": "NFTOrderInfoMap",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(NFTOrderInfo)7771_storage)",
            "contract": "NFTTDAO3V2",
            "src": "contracts/NFTTDAO3/NFTTDAO3V2.sol:38"
          },
          {
            "label": "orderInfoIds",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "NFTTDAO3V2",
            "src": "contracts/NFTTDAO3/NFTTDAO3V2.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)489_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)177_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(NFTTDAO3ERC721URIStorage)7738": {
            "label": "contract NFTTDAO3ERC721URIStorage",
            "numberOfBytes": "20"
          },
          "t_enum(OrderStatus)7759": {
            "label": "enum NFTTDAO3V2.OrderStatus",
            "members": [
              "Pending",
              "Active",
              "Sold",
              "Cancelled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_struct(NFTOrderInfo)7771_storage)": {
            "label": "mapping(uint256 => struct NFTTDAO3V2.NFTOrderInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(NFTOrderInfo)7771_storage": {
            "label": "struct NFTTDAO3V2.NFTOrderInfo",
            "members": [
              {
                "label": "orderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sellerWalletAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "selleNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)7759",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "5440b4b2663e70d5816874af70e2e09de0a103c692c04b953aa699fb9bb05140": {
      "address": "0xF1547C2972E211F7b4e7aFe4aEB8a2749470A4bD",
      "txHash": "0xcab68ec8d46ad52fc0338ab2255ab75173b0c81a25c6b9dfab35261064929221",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_NFTOrderInfoId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NFTMarket2",
            "src": "contracts/NFTMarket2/NFTMarket2.sol:36"
          },
          {
            "label": "NFTOrderInfoMap",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_struct(NFTOrderInfo)687_storage)",
            "contract": "NFTMarket2",
            "src": "contracts/NFTMarket2/NFTMarket2.sol:37"
          },
          {
            "label": "orderInfoIds",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "NFTMarket2",
            "src": "contracts/NFTMarket2/NFTMarket2.sol:38"
          },
          {
            "label": "NFTIERC721Map",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_contract(IERC721)625)",
            "contract": "NFTMarket2",
            "src": "contracts/NFTMarket2/NFTMarket2.sol:42"
          },
          {
            "label": "FEE_DENOMINATOR",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "NFTMarket2",
            "src": "contracts/NFTMarket2/NFTMarket2.sol:43"
          },
          {
            "label": "fee",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "NFTMarket2",
            "src": "contracts/NFTMarket2/NFTMarket2.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC721)625": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_enum(OrderStatus)673": {
            "label": "enum NFTMarket2.OrderStatus",
            "members": [
              "Pending",
              "Active",
              "Sold",
              "Cancelled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_contract(IERC721)625)": {
            "label": "mapping(address => contract IERC721)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NFTOrderInfo)687_storage)": {
            "label": "mapping(uint256 => struct NFTMarket2.NFTOrderInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(NFTOrderInfo)687_storage": {
            "label": "struct NFTMarket2.NFTOrderInfo",
            "members": [
              {
                "label": "orderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sellerWalletAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "sellerNFTaddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "selleNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)673",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "8c9885efc3fb567f352a49dbf714c1f62c54e0841169b139f00e5d01094e520e": {
      "address": "0xBc07B66BBaE8AC88fd7b386a74fd6789A9A50B50",
      "txHash": "0xfe4d18cc8f83065aa80d9a5973c734671196afc63cd36b5ca9590dea6548d650",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_NFTOrderInfoId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NFTMarket2",
            "src": "contracts/NFTMarket2/NFTMarket2.sol:47"
          },
          {
            "label": "NFTOrderInfoMap",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_struct(NFTOrderInfo)687_storage)",
            "contract": "NFTMarket2",
            "src": "contracts/NFTMarket2/NFTMarket2.sol:48"
          },
          {
            "label": "orderInfoIds",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "NFTMarket2",
            "src": "contracts/NFTMarket2/NFTMarket2.sol:49"
          },
          {
            "label": "NFTIERC721Map",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_struct(NFTERC721Info)705_storage)",
            "contract": "NFTMarket2",
            "src": "contracts/NFTMarket2/NFTMarket2.sol:53"
          },
          {
            "label": "FEE_DENOMINATOR",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "NFTMarket2",
            "src": "contracts/NFTMarket2/NFTMarket2.sol:54"
          },
          {
            "label": "fee",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "NFTMarket2",
            "src": "contracts/NFTMarket2/NFTMarket2.sol:58"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC721)625": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_enum(OrderStatus)673": {
            "label": "enum NFTMarket2.OrderStatus",
            "members": [
              "Pending",
              "Active",
              "Sold",
              "Cancelled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(NFTERC721Info)705_storage)": {
            "label": "mapping(address => struct NFTMarket2.NFTERC721Info)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NFTOrderInfo)687_storage)": {
            "label": "mapping(uint256 => struct NFTMarket2.NFTOrderInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(NFTERC721Info)705_storage": {
            "label": "struct NFTMarket2.NFTERC721Info",
            "members": [
              {
                "label": "NFT",
                "type": "t_contract(IERC721)625",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "FLOORPRICE",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "CHANGES",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "TOPOFFER",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "VOLUMES",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "SALES",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "OWNERS",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "SUPPLY",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(NFTOrderInfo)687_storage": {
            "label": "struct NFTMarket2.NFTOrderInfo",
            "members": [
              {
                "label": "orderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sellerWalletAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "sellerNFTaddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "selleNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)673",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "005daee25e63a87baba459d5f2ae4628bda0f7b34d2e9a5b0752beb07a7941e5": {
      "address": "0x46705bB11FD07c0EEEC9Bc9cA7a223c8869eA2d9",
      "txHash": "0x407e4db021599884b2d0d0548a6a42b6f005688c518bcf7342e06c7c9f26e19a",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_NFTOrderInfoId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NFTMarket2V2",
            "src": "contracts/NFTMarket2/NFTMarket2V2.sol:50"
          },
          {
            "label": "NFTOrderInfoMap",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_struct(NFTOrderInfo)716_storage)",
            "contract": "NFTMarket2V2",
            "src": "contracts/NFTMarket2/NFTMarket2V2.sol:51"
          },
          {
            "label": "orderInfoIds",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "NFTMarket2V2",
            "src": "contracts/NFTMarket2/NFTMarket2V2.sol:52"
          },
          {
            "label": "NFTIERC721Map",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_struct(NFTERC721Info)738_storage)",
            "contract": "NFTMarket2V2",
            "src": "contracts/NFTMarket2/NFTMarket2V2.sol:56"
          },
          {
            "label": "FEE_DENOMINATOR",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "NFTMarket2V2",
            "src": "contracts/NFTMarket2/NFTMarket2V2.sol:57"
          },
          {
            "label": "fee",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "NFTMarket2V2",
            "src": "contracts/NFTMarket2/NFTMarket2V2.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC721)625": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_enum(OrderStatus)702": {
            "label": "enum NFTMarket2V2.OrderStatus",
            "members": [
              "Pending",
              "Active",
              "Sold",
              "Cancelled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(NFTERC721Info)738_storage)": {
            "label": "mapping(address => struct NFTMarket2V2.NFTERC721Info)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NFTOrderInfo)716_storage)": {
            "label": "mapping(uint256 => struct NFTMarket2V2.NFTOrderInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(NFTERC721Info)738_storage": {
            "label": "struct NFTMarket2V2.NFTERC721Info",
            "members": [
              {
                "label": "NFT",
                "type": "t_contract(IERC721)625",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "FLOORPRICE",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "CHANGES",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "TOPOFFER",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "VOLUMES",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "SALES",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "OWNERS",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "SUPPLY",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(NFTOrderInfo)716_storage": {
            "label": "struct NFTMarket2V2.NFTOrderInfo",
            "members": [
              {
                "label": "orderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sellerWalletAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "sellerNFTaddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "selleNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)702",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "b93cafbd2a01db06910235cb6d64ae3f3dffc3d075539513b9e246ed175b1666": {
      "address": "0x3598254005f1CCe2348A3eB3F1237aFb90c2Cb90",
      "txHash": "0x176438eac1b3f5398cb52ad61be23420578b8d874810e3712745fc6346bdabd5",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_NFTOrderInfoId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NFTMarket2V2",
            "src": "contracts/NFTMarket2/NFTMarket2V2.sol:50"
          },
          {
            "label": "NFTOrderInfoMap",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_struct(NFTOrderInfo)716_storage)",
            "contract": "NFTMarket2V2",
            "src": "contracts/NFTMarket2/NFTMarket2V2.sol:51"
          },
          {
            "label": "orderInfoIds",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "NFTMarket2V2",
            "src": "contracts/NFTMarket2/NFTMarket2V2.sol:52"
          },
          {
            "label": "NFTIERC721Map",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_struct(NFTERC721Info)738_storage)",
            "contract": "NFTMarket2V2",
            "src": "contracts/NFTMarket2/NFTMarket2V2.sol:56"
          },
          {
            "label": "FEE_DENOMINATOR",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "NFTMarket2V2",
            "src": "contracts/NFTMarket2/NFTMarket2V2.sol:57"
          },
          {
            "label": "fee",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "NFTMarket2V2",
            "src": "contracts/NFTMarket2/NFTMarket2V2.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC721)625": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_enum(OrderStatus)702": {
            "label": "enum NFTMarket2V2.OrderStatus",
            "members": [
              "Pending",
              "Active",
              "Sold",
              "Cancelled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(NFTERC721Info)738_storage)": {
            "label": "mapping(address => struct NFTMarket2V2.NFTERC721Info)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NFTOrderInfo)716_storage)": {
            "label": "mapping(uint256 => struct NFTMarket2V2.NFTOrderInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(NFTERC721Info)738_storage": {
            "label": "struct NFTMarket2V2.NFTERC721Info",
            "members": [
              {
                "label": "NFT",
                "type": "t_contract(IERC721)625",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "FLOORPRICE",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "CHANGES",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "TOPOFFER",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "VOLUMES",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "SALES",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "OWNERS",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "SUPPLY",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(NFTOrderInfo)716_storage": {
            "label": "struct NFTMarket2V2.NFTOrderInfo",
            "members": [
              {
                "label": "orderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sellerWalletAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "sellerNFTaddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "selleNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)702",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "049ec2e965e6fb6bef96fbdc790d3104143e8f2a85d9e4a245ee173c52861cd7": {
      "address": "0xD6065aF3B55f9a8Cfcd59827B29D928179E4496f",
      "txHash": "0xfb1cd453f6375dc75622a10326a052208288abfa42af9b68e86dbfce0264edd5",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NFTTDAO4",
            "src": "contracts/NFTTDAO4/NFTTDAO4.sol:35"
          },
          {
            "label": "_uriStorage",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(NFTTDAO4ERC721URIStorage)9094",
            "contract": "NFTTDAO4",
            "src": "contracts/NFTTDAO4/NFTTDAO4.sol:36"
          },
          {
            "label": "_NFTOrderInfoId",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "NFTTDAO4",
            "src": "contracts/NFTTDAO4/NFTTDAO4.sol:37"
          },
          {
            "label": "NFTOrderInfoMap",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(NFTOrderInfo)8749_storage)",
            "contract": "NFTTDAO4",
            "src": "contracts/NFTTDAO4/NFTTDAO4.sol:38"
          },
          {
            "label": "orderInfoIds",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "NFTTDAO4",
            "src": "contracts/NFTTDAO4/NFTTDAO4.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)489_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)177_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(NFTTDAO4ERC721URIStorage)9094": {
            "label": "contract NFTTDAO4ERC721URIStorage",
            "numberOfBytes": "20"
          },
          "t_enum(OrderStatus)8737": {
            "label": "enum NFTTDAO4.OrderStatus",
            "members": [
              "Pending",
              "Active",
              "Sold",
              "Cancelled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_struct(NFTOrderInfo)8749_storage)": {
            "label": "mapping(uint256 => struct NFTTDAO4.NFTOrderInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(NFTOrderInfo)8749_storage": {
            "label": "struct NFTTDAO4.NFTOrderInfo",
            "members": [
              {
                "label": "orderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sellerWalletAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "selleNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)8737",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
